@model AvaliacaoDesempenho.Models.CiclosAvaliacao.GestaoCompentenciasCargosViewModel

@{
    Layout = "~/Views/Shared/_LayoutInterno.cshtml";
}

<section id="bread">
    <ul class="breadcrumb">
        <li>@Html.ActionLink("Administração", "Index", "Home")<span class="divider"></span></li>
        <li>@Html.ActionLink("Gerenciamento de Ciclos de Avaliação", "GestaoCiclosAvaliacao", "CiclosAvaliacao")<span class="divider"></span></li>
        <li class="active">Importar e Equivaler Cargos e Competências</li>
    </ul>
</section>

@if (Model.CicloAvaliacaoSelecionadoID.HasValue)
{
    @Html.Action("CicloAvaliacaoSelecionado", "CiclosAvaliacao", new { cicloAvaliacaoSelecionadoID = Model.CicloAvaliacaoSelecionadoID.Value })
}

<div class="row">
    <div class="col-md-100">
        @Html.ActionLink("Consolidar Cargos Rubi", "ConsolidarCargosRubi", new { id = Model.CicloAvaliacaoSelecionadoID }, new { @class = "btn btn-default" })

        @Html.ActionLink("Importar Competências", "", null, new { @class = "btn btn-default" })
    </div>
</div>

<div class="row top30">
    <div class="col-md-100">
        <label class="control-label">
            Relações estabelecidas entre cargos e competências
        </label>
    </div>
</div>

@if (Model != null && Model.AssociacoesCargosCompetencias != null)
{
    using (Html.BeginForm("GestaoCompetenciasCargos",
                           "CiclosAvaliacao",
                           FormMethod.Post,
                           new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(modelCiclo => Model.CicloAvaliacaoSelecionadoID)
        @Html.HiddenFor(modelCiclo => Model.Pagina)
   
        for (int i = 0; i < Model.Pagina * 20; i++)
        {
            @Html.HiddenFor(modelItem => Model.AssociacoesCargosCompetencias[i].ID)
        }

        <div class="row top20">
            <div class="col-md-100">
                <table class="table">
                    <tr>
                        <th>
                            Cargo Rubi
                        </th>
                        <th>
                            Área Rubi
                        </th>
                        <th>
                            Setor Rubi
                        </th>
                        <th>
                            Cargo Competência
                        </th>
                        <th>
                            Área Competência
                        </th>
                        <th>
                            Setor Competência
                        </th>
                    </tr>

                    @for (int i = (Model.Pagina - 1) * 20; i < (((Model.Pagina * 20) > Model.AssociacoesCargosCompetencias.Count) ? Model.AssociacoesCargosCompetencias.Count : (Model.Pagina * 20)); i++)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => Model.AssociacoesCargosCompetencias[i].CargoRubi)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.AssociacoesCargosCompetencias[i].AreaRubi)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => Model.AssociacoesCargosCompetencias[i].SetorRubi)
                            </td>
                            <td>
                                @Html.DropDownListFor(modelItem => Model.AssociacoesCargosCompetencias[i].CargoCompetenciaID,
                                      new SelectList(Model.CargosCompentencia,
                                                     "Value",
                                                     "Text",
                                                     Model.AssociacoesCargosCompetencias[i].CargoCompetenciaID),
                                                     "Não participa",
                                                     new { @class = "form-control" })
                            </td>
                            <td>
                                @Html.DropDownListFor(modelItem => Model.AssociacoesCargosCompetencias[i].AreaCompetenciaID,
                                      new SelectList(Model.AreasCompentencia,
                                                     "Value",
                                                     "Text",
                                                     Model.AssociacoesCargosCompetencias[i].AreaCompetenciaID),
                                                     "Não participa",
                                                     new { @class = "form-control" })
                            </td>
                            <td>
                                @Html.DropDownListFor(modelItem => Model.AssociacoesCargosCompetencias[i].SetorCompetenciaID,
                                      new SelectList(Model.SetoresCompentencia,
                                                     "Value",
                                                     "Text",
                                                     Model.AssociacoesCargosCompetencias[i].SetorCompetenciaID),
                                                     "Não participa",
                                                     new { @class = "form-control" })
                            </td>

                            @Html.HiddenFor(modelItem => Model.AssociacoesCargosCompetencias[i].ID)
                            @Html.HiddenFor(modelItem => Model.AssociacoesCargosCompetencias[i].CargoRubiID)
                            @Html.HiddenFor(modelItem => Model.AssociacoesCargosCompetencias[i].CargoRubi)
                            @Html.HiddenFor(modelItem => Model.AssociacoesCargosCompetencias[i].AreaRubiID)
                            @Html.HiddenFor(modelItem => Model.AssociacoesCargosCompetencias[i].AreaRubi)
                            @Html.HiddenFor(modelItem => Model.AssociacoesCargosCompetencias[i].SetorRubiID)
                            @Html.HiddenFor(modelItem => Model.AssociacoesCargosCompetencias[i].SetorRubi)
                        </tr>
                    }
                </table>
                <div class="text-center">
                    <ul class="pagination">
                        @{
                    var ultimaPagina = 1;
                    if (Model.AssociacoesCargosCompetencias.Count > Math.Ceiling(Convert.ToDouble(Model.AssociacoesCargosCompetencias.Count / 20)) * 20)
                    {
                        ultimaPagina = Convert.ToInt32(Math.Ceiling(Convert.ToDouble(Model.AssociacoesCargosCompetencias.Count / 20))) + 1;
                    }
                    else
                    {
                        ultimaPagina = Convert.ToInt32(Math.Ceiling(Convert.ToDouble(Model.AssociacoesCargosCompetencias.Count / 20)));
                    }
                    var count = 0;
                    var parada = 5;
                    for (int i = ((Model.Pagina <= 3) ? 1 : Model.Pagina - 3); i <= ultimaPagina; i++)
                    {
                        if (i == Model.Pagina)
                        {
                            <li class="active">@Html.ActionLink(i.ToString(), "GestaoCompetenciasCargos", new { id = Model.CicloAvaliacaoSelecionadoID, pagina = i })</li>
                        }
                        else
                        {
                            if (count == parada || i == ultimaPagina)
                            {
                                <li>@Html.ActionLink(">>", "GestaoCompetenciasCargos", new { id = Model.CicloAvaliacaoSelecionadoID, pagina = i })</li>
                                break;
                            }
                            else
                            {
                                if (count == 0)
                                {
                                    if (Model.Pagina > 1)
                                    {
                                        <li>@Html.ActionLink("<<", "GestaoCompetenciasCargos", new { id = Model.CicloAvaliacaoSelecionadoID, pagina = i })</li>
                                        parada = 6;
                                    }
                                }
                                else
                                {
                                    <li>@Html.ActionLink(i.ToString(), "GestaoCompetenciasCargos", new { id = Model.CicloAvaliacaoSelecionadoID, pagina = i })</li>
                                }
                            }
                        }
                        count++;
                    }
                        }
                    </ul>
                </div>
            </div>
        </div>

        <div class="row top30">
            <div class="col-md-100">
                @Html.ActionLink("Copiar último ciclo", "Index", "Relatorios", null, new { @class = "btn btn-default" })
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    }
}