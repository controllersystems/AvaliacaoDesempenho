@using AvaliacaoDesempenho.Dominio.BusinessEntities
@model AvaliacaoDesempenho.Models.Avaliacoes.ManterAvaliacaoColaboradorCompetenciasGestorViewModel

@{
    Layout = "~/Views/Shared/_LayoutInterno.cshtml";
}

@Html.Action("CabecalhoColaborador", "Usuarios", new { cicloAvaliacaoSelecionadoID = Model.CicloAvaliacaoSelecionadoID })



<label>Competências</label>
<hr />

@using (Html.BeginForm("ManterAvaliacaoColaboradorCompetenciasGestor",
                              "Avaliacoes",
                              FormMethod.Post,
                              new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })

    @Html.HiddenFor(model => Model.CicloAvaliacaoSelecionadoID)
    @Html.HiddenFor(model => Model.GestorRubiID)
    @Html.HiddenFor(model => Model.UsuarioRubiID)
    @Html.HiddenFor(model => Model.ColaboradorID)
    @Html.HiddenFor(model => Model.ProximaEtapa)
    @Html.HiddenFor(model => Model.StatusAvaliacaoColaboradorID)
    @Html.HiddenFor(model => Model.StatusCicloAvaliacaoID)
    @Html.HiddenFor(model => Model.DataInicioAvaliacaoGestor)
    @Html.HiddenFor(model => Model.DataTerminoAvaliacaoGestor)

    if (Model.ListaCompetenciasCorporativas != null && Model.ListaCompetenciasCorporativas.Any())
    {
        <div class="row top20">
            <div class="col-md-100">
                <table class="table">
                    <tr>
                        <th>
                            Competências Corporativas
                        </th>
                        <th>
                            Colaborador
                        </th>
                        <th>
                            Nível Requerido
                        </th>
                        <th>
                            Gestor
                        </th>
                        <th>
                            Comentário do Gestor
                        </th>
                    </tr>
                    @for (int i = 0; i < Model.ListaCompetenciasCorporativas.Count; i++)
                    {
                        //if (Model.ListaCompetenciasCorporativas[i].ComentarioGestor == null || Model.ListaCompetenciasCorporativas[i].ComentarioGestor == "")
                        //{
                        //    Model.ProximaEtapa = false;
                        //}
                        <tr>
                            <td class="col-md-6">
                                @Html.HiddenFor(model => Model.ListaCompetenciasCorporativas[i].ID)
                                @Html.HiddenFor(model => Model.ListaCompetenciasCorporativas[i].CompentenciaID)
                                @Html.TextAreaFor(model => Model.ListaCompetenciasCorporativas[i].Competencia, new { @class = "form-control", @readonly = "readonly" })
                            </td>
                            <td class="col-md-1">
                                @if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores))
                                {
                                    if (Model.DataInicioAvaliacaoGestor <= DateTime.Today && Model.DataTerminoAvaliacaoGestor >= DateTime.Today)
                                    {
                                        @Html.TextBoxFor(model => Model.ListaCompetenciasCorporativas[i].NivelColaborador, new { @class = "form-control", @readonly = "readonly" })
                                    }
                                    else
                                    {
                                        @Html.TextBox(Model.ListaCompetenciasCorporativas[i].NivelColaborador.ToString(), "", new { @class = "form-control", @readonly = "readonly" })
                                    }
                                }
                                else
                                {
                                    if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosRH) ||
                                        Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.Encerrada))
                                    {
                                        @Html.TextBoxFor(model => Model.ListaCompetenciasCorporativas[i].NivelColaborador, new { @class = "form-control", @readonly = "readonly" })
                                    }
                                    else
                                    {
                                        @Html.TextBox(Model.ListaCompetenciasCorporativas[i].NivelColaborador.ToString(), "", new { @class = "form-control", @readonly = "readonly" })
                                    }
                                }
                            </td>
                            <td class="col-md-1">
                                @Html.TextBoxFor(model => Model.ListaCompetenciasCorporativas[i].NivelRequerido, new { @class = "form-control", @readonly = "readonly" })
                            </td>
                            <td class="col-md-1">
                                @if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores))
                                {
                                    if (Model.DataInicioAvaliacaoGestor <= DateTime.Today && Model.DataTerminoAvaliacaoGestor >= DateTime.Today)
                                    {
                                        @Html.DropDownListFor(model => Model.ListaCompetenciasCorporativas[i].NivelGestor,
                                        new SelectList(Model.ListaNivelAvaliacao,
                                                   "Value",
                                                   "Text",
                                                   Model.ListaCompetenciasCorporativas[i].NivelGestor),
                                                   " ",
                                                   new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => Model.ListaCompetenciasCorporativas[i].NivelGestor, string.Empty, new { @class = "text-danger" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(model => Model.ListaCompetenciasCorporativas[i].NivelGestor,
                                         new SelectList(Model.ListaNivelAvaliacao,
                                                   "Value",
                                                   "Text",
                                                   Model.ListaCompetenciasCorporativas[i].NivelGestor),
                                                   " ",
                                                        new { @class = "form-control", @readonly = "readonly" })
                                    }

                                }
                                else
                                {
                                    @Html.DropDownListFor(model => Model.ListaCompetenciasCorporativas[i].NivelGestor,
                                    new SelectList(Model.ListaNivelAvaliacao,
                                                   "Value",
                                                   "Text",
                                                   Model.ListaCompetenciasCorporativas[i].NivelGestor),
                                                   " ",
                                                   new { @class = "form-control", @readonly = "readonly" })
                                }
                            </td>
                            <td class="col-md-3">
                                @if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores))
                                {
                                    if (Model.DataInicioAvaliacaoGestor <= DateTime.Today && Model.DataTerminoAvaliacaoGestor >= DateTime.Today)
                                    {
                                        @Html.TextAreaFor(model => Model.ListaCompetenciasCorporativas[i].ComentarioGestor, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => Model.ListaCompetenciasCorporativas[i].ComentarioGestor, string.Empty, new { @class = "text-danger" })
                                    }
                                    else
                                    {
                                        @Html.TextAreaFor(model => Model.ListaCompetenciasCorporativas[i].ComentarioGestor, new { @class = "form-control", @readonly = "readonly" })
                                    }
                                }
                                else
                                {
                                    @Html.TextAreaFor(model => Model.ListaCompetenciasCorporativas[i].ComentarioGestor, new { @class = "form-control", @readonly = "readonly" })
                                }
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    }

    if (Model.ListaCompetenciasLideranca != null && Model.ListaCompetenciasLideranca.Any())
    {
        <div class="row top20">
            <div class="col-md-100">
                <table class="table">
                    <tr>
                        <th>
                            Competências de Liderança
                        </th>
                        <th>
                            &nbsp;
                        </th>
                        <th>
                            &nbsp;
                        </th>
                        <th>
                            &nbsp;
                        </th>
                        <th>
                            &nbsp;
                        </th>
                    </tr>

                    @for (int i = 0; i < Model.ListaCompetenciasLideranca.Count; i++)
                    {
                        //if (Model.ListaCompetenciasLideranca[i].ComentarioGestor == null || Model.ListaCompetenciasLideranca[i].ComentarioGestor == "")
                        //{
                        //    Model.ProximaEtapa = false;
                        //}
                        <tr>
                            <td class="col-md-6">
                                @Html.HiddenFor(model => Model.ListaCompetenciasLideranca[i].ID)
                                @Html.HiddenFor(model => Model.ListaCompetenciasLideranca[i].CompentenciaID)
                                @Html.TextAreaFor(model => Model.ListaCompetenciasLideranca[i].Competencia, new { @class = "form-control", @readonly = "readonly" })
                            </td>
                            <td class="col-md-1">
                                @if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores))
                                {
                                    if (Model.DataInicioAvaliacaoGestor <= DateTime.Today && Model.DataTerminoAvaliacaoGestor >= DateTime.Today)
                                    {
                                        @Html.TextBoxFor(model => Model.ListaCompetenciasLideranca[i].NivelColaborador, new { @class = "form-control", @readonly = "readonly" })
                                    }
                                    else
                                    {
                                        @Html.TextBox(Model.ListaCompetenciasLideranca[i].NivelColaborador.ToString(), "", new { @class = "form-control", @readonly = "readonly" })
                                    }
                                }
                                else
                                {
                                    if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosRH) ||
                                        Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.Encerrada))
                                    {
                                        @Html.TextBoxFor(model => Model.ListaCompetenciasLideranca[i].NivelColaborador, new { @class = "form-control", @readonly = "readonly" })
                                    }
                                    else
                                    {
                                        @Html.TextBox(Model.ListaCompetenciasLideranca[i].NivelColaborador.ToString(), "", new { @class = "form-control", @readonly = "readonly" })
                                    }
                                }
                            </td>
                            <td class="col-md-1">
                                @Html.TextBoxFor(model => Model.ListaCompetenciasLideranca[i].NivelRequerido, new { @class = "form-control", @readonly = "readonly" })
                            </td>
                            <td class="col-md-1">
                                @if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores))
                                {
                                    if (Model.DataInicioAvaliacaoGestor <= DateTime.Today && Model.DataTerminoAvaliacaoGestor >= DateTime.Today)
                                    {
                                        @Html.DropDownListFor(model => Model.ListaCompetenciasLideranca[i].NivelGestor,
                                    new SelectList(Model.ListaNivelAvaliacao,
                                                   "Value",
                                                   "Text",
                                                   Model.ListaCompetenciasLideranca[i].NivelGestor),
                                                   " ",
                                                   new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => Model.ListaCompetenciasLideranca[i].NivelGestor, string.Empty, new { @class = "text-danger" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(model => Model.ListaCompetenciasLideranca[i].NivelGestor,
                                    new SelectList(Model.ListaNivelAvaliacao,
                                                   "Value",
                                                   "Text",
                                                   Model.ListaCompetenciasLideranca[i].NivelGestor),
                                                   " ",
                                                        new { @class = "form-control", @readonly = "readonly" })
                                    }
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => Model.ListaCompetenciasLideranca[i].NivelGestor,
                                    new SelectList(Model.ListaNivelAvaliacao,
                                                   "Value",
                                                   "Text",
                                                   Model.ListaCompetenciasLideranca[i].NivelGestor),
                                                   " ",
                                                   new { @class = "form-control", @readonly = "readonly" })
                                }
                            </td>
                            <td class="col-md-3">
                                @if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores))
                                {
                                    if (Model.DataInicioAvaliacaoGestor <= DateTime.Today && Model.DataTerminoAvaliacaoGestor >= DateTime.Today)
                                    {
                                        @Html.TextAreaFor(model => Model.ListaCompetenciasLideranca[i].ComentarioGestor, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => Model.ListaCompetenciasLideranca[i].ComentarioGestor, string.Empty, new { @class = "text-danger" })
                                    }
                                    else
                                    {
                                        @Html.TextAreaFor(model => Model.ListaCompetenciasLideranca[i].ComentarioGestor, new { @class = "form-control", @readonly = "readonly" })
                                    }
                                }
                                else
                                {
                                    @Html.TextAreaFor(model => Model.ListaCompetenciasLideranca[i].ComentarioGestor, new { @class = "form-control", @readonly = "readonly" })
                                }
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    }

    if (Model.ListaCompetenciasFuncionais != null && Model.ListaCompetenciasFuncionais.Any())
    {
        <div class="row top20">
            <div class="col-md-100">
                <table class="table">
                    <tr>
                        <th>
                            Competências Funcionais
                        </th>
                        <th>
                            &nbsp;
                        </th>
                        <th>
                            &nbsp;
                        </th>
                        <th>
                            &nbsp;
                        </th>
                        <th>
                            &nbsp;
                        </th>
                    </tr>
                    @for (int i = 0; i < Model.ListaCompetenciasFuncionais.Count; i++)
                    {
                        //if (Model.ListaCompetenciasFuncionais[i].ComentarioGestor == null || Model.ListaCompetenciasFuncionais[i].ComentarioGestor == "")
                        //{
                        //    Model.ProximaEtapa = false;
                        //}
                        <tr>
                            <td class="col-md-6">
                                @Html.HiddenFor(model => Model.ListaCompetenciasFuncionais[i].ID)
                                @Html.HiddenFor(model => Model.ListaCompetenciasFuncionais[i].CompentenciaID)
                                @Html.TextAreaFor(model => Model.ListaCompetenciasFuncionais[i].Competencia, new { @class = "form-control", @readonly = "readonly" })
                            </td>
                            <td class="col-md-1">
                                @if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores))
                                {
                                    if (Model.DataInicioAvaliacaoGestor <= DateTime.Today && Model.DataTerminoAvaliacaoGestor >= DateTime.Today)
                                    {
                                        @Html.TextBoxFor(model => Model.ListaCompetenciasFuncionais[i].NivelColaborador, new { @class = "form-control", @readonly = "readonly" })
                                    }
                                    else
                                    {
                                        @Html.TextBox(Model.ListaCompetenciasFuncionais[i].NivelColaborador.ToString(), "", new { @class = "form-control", @readonly = "readonly" })
                                    }
                                }
                                else
                                {
                                    if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosRH) ||
                                        Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.Encerrada))
                                    {
                                        @Html.TextBoxFor(model => Model.ListaCompetenciasFuncionais[i].NivelColaborador, new { @class = "form-control", @readonly = "readonly" })
                                    }
                                    else
                                    {
                                        @Html.TextBox(Model.ListaCompetenciasFuncionais[i].NivelColaborador.ToString(), "", new { @class = "form-control", @readonly = "readonly" })
                                    }
                                }
                            </td>
                            <td class="col-md-1">
                                @Html.TextBoxFor(model => Model.ListaCompetenciasFuncionais[i].NivelRequerido, new { @class = "form-control", @readonly = "readonly" })
                            </td>
                            <td class="col-md-1">
                                @if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores))
                                {
                                    if (Model.DataInicioAvaliacaoGestor <= DateTime.Today && Model.DataTerminoAvaliacaoGestor >= DateTime.Today)
                                    {
                                        @Html.DropDownListFor(model => Model.ListaCompetenciasFuncionais[i].NivelGestor,
                                        new SelectList(Model.ListaNivelAvaliacao,
                                                   "Value",
                                                   "Text",
                                                   Model.ListaCompetenciasFuncionais[i].NivelGestor),
                                                   " ",
                                                   new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => Model.ListaCompetenciasFuncionais[i].NivelGestor, string.Empty, new { @class = "text-danger" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(model => Model.ListaCompetenciasFuncionais[i].NivelGestor,
                                         new SelectList(Model.ListaNivelAvaliacao,
                                                   "Value",
                                                   "Text",
                                                   Model.ListaCompetenciasFuncionais[i].NivelGestor),
                                                   " ",
                                                        new { @class = "form-control", @readonly = "readonly" })
                                    }
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => Model.ListaCompetenciasFuncionais[i].NivelGestor,
                                    new SelectList(Model.ListaNivelAvaliacao,
                                                   "Value",
                                                   "Text",
                                                   Model.ListaCompetenciasFuncionais[i].NivelGestor),
                                                   " ",
                                                   new { @class = "form-control", @readonly = "readonly" })
                                }
                            </td>
                            <td class="col-md-3">
                                @if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores))
                                {
                                    if (Model.DataInicioAvaliacaoGestor <= DateTime.Today && Model.DataTerminoAvaliacaoGestor >= DateTime.Today)
                                    {
                                        @Html.TextAreaFor(model => Model.ListaCompetenciasFuncionais[i].ComentarioGestor, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => Model.ListaCompetenciasFuncionais[i].ComentarioGestor, string.Empty, new { @class = "text-danger" })
                                    }
                                    else
                                    {
                                        @Html.TextAreaFor(model => Model.ListaCompetenciasFuncionais[i].ComentarioGestor, new { @class = "form-control", @readonly = "readonly" })
                                    }
                                }
                                else
                                {
                                    @Html.TextAreaFor(model => Model.ListaCompetenciasFuncionais[i].ComentarioGestor, new { @class = "form-control", @readonly = "readonly" })
                                }
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    }

    <div class="row top20">
        <div class="col-md-095 col-md-offset-005 text-right">
            @Html.ActionLink("Anterior", "ManterAvaliacaoColaboradorAutoAvaliacaoGestor", new { id = Model.CicloAvaliacaoSelecionadoID, colaboradorID = Model.ColaboradorID, etapaAutoAvaliacao = 1 }, new { @class = "btn btn-default" })

            @if (Model.StatusAvaliacaoColaboradorID == (int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores)
            {
                if (Model.DataInicioAvaliacaoGestor <= DateTime.Today && Model.DataTerminoAvaliacaoGestor >= DateTime.Today)
                {
                    <input type="submit" value="Salvar" class="btn btn-default" />
                }
                if (Model.ProximaEtapa)
                {
                    @Html.ActionLink("Próxima Etapa", "ManterAvaliacaoColaboradorPerformance", new { id = Model.CicloAvaliacaoSelecionadoID, colaboradorID = Model.ColaboradorID }, new { @class = "btn btn-default" })
                }
            }
            @if (Model.StatusAvaliacaoColaboradorID == (int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosRH
                || Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.Encerrada))
            {
                @Html.ActionLink("Próxima Etapa", "ManterAvaliacaoColaboradorPerformance", new { id = Model.CicloAvaliacaoSelecionadoID, colaboradorID = Model.ColaboradorID }, new { @class = "btn btn-default" })
            }
        </div>
    </div>
}