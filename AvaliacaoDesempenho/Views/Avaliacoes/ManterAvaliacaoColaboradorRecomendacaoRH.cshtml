@using AvaliacaoDesempenho.Dominio.BusinessEntities;

@model AvaliacaoDesempenho.Models.Avaliacoes.ManterAvaliacaoColaboradorRecomendacaoRHViewModel

@{
    Layout = "~/Views/Shared/_LayoutInterno.cshtml";
}

@Html.Action("CabecalhoColaborador", "Usuarios", new { cicloAvaliacaoSelecionadoID = Model.CicloAvaliacaoSelecionadoID, colaboradorID = Model.ColaboradorID })



<label>Recomendação</label>
<hr />

@if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.Encerrada)
    && !Model.AcessoGestor
    && !Model.PapelID.Equals((int)Enumeradores.CodigoPapeis.Administrador))
{
    <div class="row top20">
        <div class="col-md-050">
            <label>Classificação de Desempenho</label>
        </div>
        <div class="col-md-050">
                @if (Model.ItemRecomendacaoColaborador.RatingFinalPosCalibragem == null) { 
                    @Html.TextBox("Model.ItemRecomendacaoColaborador.RatingFinalPosCalibragem", string.Empty, new { @class = "form-control", @readonly = "readonly" })
                }
                else
                {
                    @Html.TextBoxFor(model => Model.ListaRecomendacaoDeRating.FirstOrDefault(x => x.Value == Model.ItemRecomendacaoColaborador.RatingFinalPosCalibragem.Value.ToString()).Text,
                                                new { @class = "form-control", @readonly = "readonly" })
                }


            @*@Html.DropDownListFor(model => Model.ItemRecomendacaoColaborador.RatingFinalPosCalibragem,
                                                   new SelectList(Model.ListaRecomendacaoDeRating,
                                                             "Value",
                                                             "Text",
                                                   Model.ItemRecomendacaoColaborador.RatingFinalPosCalibragem),
                                                             " ",
                                                new { @class = "form-control", @readonly = "readonly" })*@
        </div>
    </div>
    <hr />
    <div class="row top20">
        <div class="col-md-095 col-md-offset-005 text-right">
            @Html.ActionLink("Anterior", "ManterAvaliacaoColaboradorPerformance", new { id = Model.CicloAvaliacaoSelecionadoID, colaboradorID = Model.ColaboradorID, etapaAutoAvaliacao = 1 }, new { @class = "btn btn-default" })
        </div>
    </div>
}
else
{
    using (Html.BeginForm("ManterAvaliacaoColaboradorRecomendacaoRH",
                              "Avaliacoes",
                              FormMethod.Post,
                              new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })

        @Html.HiddenFor(model => Model.ItemRecomendacaoColaborador.ID)
        @Html.HiddenFor(model => Model.CicloAvaliacaoSelecionadoID)
        @Html.HiddenFor(model => Model.AvaliacaoColaboradorID)
        @Html.HiddenFor(model => Model.ColaboradorID)
        @Html.HiddenFor(model => Model.GestorRubiID)
        @Html.HiddenFor(model => Model.UsuarioRubiID)
        @Html.HiddenFor(model => Model.StatusAvaliacaoColaboradorID)
        @Html.HiddenFor(model => Model.PapelID)


        <div class="row top20">
            <div class="col-md-100">
                <div class="col-md-025">
                    <label>Recomendação de Rating</label>
                </div>
                <div class="col-md-025">
                    @Html.DropDownListFor(model => Model.ItemRecomendacaoColaborador.RecomendacaoDeRating,
                       new SelectList(Model.ListaRecomendacaoDeRating,
                                      "Value",
                                      "Text",
                                      Model.ItemRecomendacaoColaborador.RecomendacaoDeRating),
                                      " ",
                                      new { @class = "form-control", @readonly = "readonly" })
                </div>
                <div class="col-md-025">
                    <label>Recomendação de Promoção</label>
                </div>
                <div class="col-md-025">
                    @Html.DropDownListFor(model => Model.ItemRecomendacaoColaborador.RecomendacaoDePromocao,
                       new SelectList(Model.ListaSimNao,
                                     "Value",
                                     "Text",
                                     Model.ItemRecomendacaoColaborador.RecomendacaoDePromocao),
                                     " ",
                                     new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>
        </div>
        <div class="row top20">
            <div class="col-md-050">
                <label>Justificativa</label>
            </div>
            <div class="col-md-050">
                <label>Justificativa</label>
            </div>
            <div class="col-md-050">
                @Html.TextAreaFor(model => Model.ItemRecomendacaoColaborador.Justificativa, new { @class = "form-control", @readonly = "readonly" })
            </div>
            <div class="col-md-050">
                @Html.TextAreaFor(model => Model.ItemRecomendacaoColaborador.JustificativaDaJustificativa, new { @class = "form-control", @readonly = "readonly" })
            </div>
        </div>

        if (Model.PapelID == (int)Enumeradores.CodigoPapeis.Administrador)
        {
            if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.Encerrada))
            {
                <div class="row top20">
                    <div class="col-md-025">
                        <label>Rating Final pós Calibragem</label>
                    </div>
                    <div class="col-md-025">
                        @Html.DropDownListFor(model => Model.ItemRecomendacaoColaborador.RatingFinalPosCalibragem,
                                                   new SelectList(Model.ListaRecomendacaoDeRating,
                                                             "Value",
                                                             "Text",
                                                   Model.ItemRecomendacaoColaborador.RatingFinalPosCalibragem),
                                                             " ",
                                                new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-025">
                        <label>Indicação a promoção após calibragem</label>
                    </div>
                    <div class="col-md-025">
                        @Html.DropDownListFor(model => Model.ItemRecomendacaoColaborador.IndicacaoPromocaoPosCalibragem,
                                                   new SelectList(Model.ListaSimNao,
                                                             "Value",
                                                             "Text",
                                                   Model.ItemRecomendacaoColaborador.IndicacaoPromocaoPosCalibragem),
                                                             " ",
                                                  new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <div class="row top20">
                    <div class="col-md-050">
                        <label>Justificativa</label>
                    </div>
                    <div class="col-md-050">
                        <label>Justificativa</label>
                    </div>
                    <div class="col-md-050">
                        @Html.TextAreaFor(model => Model.ItemRecomendacaoColaborador.JustificativaRatingFinalPosCalibragem, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-050">
                        @Html.TextAreaFor(model => Model.ItemRecomendacaoColaborador.JustificativaIndicacaoPromocaoPosCalibragem, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
            }
            else
            {
                <div class="row top20">
                    <div class="col-md-025">
                        <label>Rating Final pós Calibragem</label>
                    </div>
                    <div class="col-md-025">
                        @Html.DropDownListFor(model => Model.ItemRecomendacaoColaborador.RatingFinalPosCalibragem,
                                                   new SelectList(Model.ListaRecomendacaoDeRating,
                                                             "Value",
                                                             "Text",
                                                   Model.ItemRecomendacaoColaborador.RatingFinalPosCalibragem),
                                                             " ",
                                                   new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => Model.ItemRecomendacaoColaborador.RatingFinalPosCalibragem, string.Empty, new { @class = "text-danger" })
                    </div>
                    <div class="col-md-025">
                        <label>Indicação a promoção após calibragem</label>
                    </div>
                    <div class="col-md-025">
                        @Html.DropDownListFor(model => Model.ItemRecomendacaoColaborador.IndicacaoPromocaoPosCalibragem,
                                                   new SelectList(Model.ListaSimNao,
                                                             "Value",
                                                             "Text",
                                                   Model.ItemRecomendacaoColaborador.IndicacaoPromocaoPosCalibragem),
                                                             " ",
                                                     new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => Model.ItemRecomendacaoColaborador.IndicacaoPromocaoPosCalibragem, string.Empty, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row top20">
                    <div class="col-md-050">
                        <label>Justificativa</label>
                    </div>
                    <div class="col-md-050">
                        <label>Justificativa</label>
                    </div>
                    <div class="col-md-050">
                        @Html.TextAreaFor(model => Model.ItemRecomendacaoColaborador.JustificativaRatingFinalPosCalibragem, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => Model.ItemRecomendacaoColaborador.JustificativaRatingFinalPosCalibragem, string.Empty, new { @class = "text-danger" })
                    </div>
                    <div class="col-md-050">
                        @Html.TextAreaFor(model => Model.ItemRecomendacaoColaborador.JustificativaIndicacaoPromocaoPosCalibragem, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => Model.ItemRecomendacaoColaborador.JustificativaIndicacaoPromocaoPosCalibragem, string.Empty, new { @class = "text-danger" })
                    </div>
                </div>
            }
        }

        <hr />
        <div class="row top20">
            <div class="col-md-095 col-md-offset-005 text-right">
                @Html.ActionLink("Anterior", "ManterAvaliacaoColaboradorPerformance", new { id = Model.CicloAvaliacaoSelecionadoID, colaboradorID = Model.ColaboradorID, etapaAutoAvaliacao = 1 }, new { @class = "btn btn-default" })
                @if (Model.StatusAvaliacaoColaboradorID == (int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosRH && Model.PapelID == (int)Enumeradores.CodigoPapeis.Administrador)
                {
                    <input type="submit" value="Salvar" class="btn btn-default" />
                }
            </div>
        </div>
    }
}
