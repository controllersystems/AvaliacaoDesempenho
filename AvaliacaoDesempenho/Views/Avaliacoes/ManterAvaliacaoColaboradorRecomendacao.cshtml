@using AvaliacaoDesempenho.Dominio.BusinessEntities;

@model AvaliacaoDesempenho.Models.Avaliacoes.ManterAvaliacaoColaboradorRecomendacaoViewModel

@{
    Layout = "~/Views/Shared/_LayoutInterno.cshtml";
}

@Html.Action("CabecalhoColaborador", "Usuarios", new { cicloAvaliacaoSelecionadoID = Model.CicloAvaliacaoSelecionadoID, colaboradorID = Model.ColaboradorID })



<label>Recomendação</label>
<hr />

@using (Html.BeginForm("ManterAvaliacaoColaboradorRecomendacao",
                              "Avaliacoes",
                              FormMethod.Post,
                              new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })

    @Html.HiddenFor(model => Model.ItemRecomendacaoColaborador.ID)
    @Html.HiddenFor(model => Model.CicloAvaliacaoSelecionadoID)
    @Html.HiddenFor(model => Model.AvaliacaoColaboradorID)
    @Html.HiddenFor(model => Model.ColaboradorID)
    @Html.HiddenFor(model => Model.GestorRubiID)
    @Html.HiddenFor(model => Model.UsuarioRubiID)
    @Html.HiddenFor(model => Model.StatusAvaliacaoColaboradorID)
    @Html.HiddenFor(model => Model.StatusCicloAvaliacaoID)
    @Html.HiddenFor(model => Model.DataInicioAvaliacaoGestor)
    @Html.HiddenFor(model => Model.DataTerminoAvaliacaoGestor)

    <div class="row top20">
        <div class="col-md-100">
            <div class="col-md-025">
                <label>Recomendação de Rating</label>
            </div>
            <div class="col-md-025">
                @if (Model.StatusAvaliacaoColaboradorID == (int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosRH
                    || Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.Encerrada))
                {
                    @Html.DropDownListFor(model => Model.ItemRecomendacaoColaborador.RecomendacaoDeRating,
                                               new SelectList(Model.ListaRecomendacaoDeRating,
                                                         "Value",
                                                         "Text",
                                                  Model.ItemRecomendacaoColaborador.RecomendacaoDeRating),
                                                         " ",
                                                              new { @class = "form-control", @readonly = "readonly" })
                }
                else
                {
                    if (Model.StatusAvaliacaoColaboradorID == (int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores)
                    {
                        if (Model.StatusCicloAvaliacaoID == (int)Enumeradores.SituacaoCicloAvaliacao.EmAvaliacaoPelosGestores
                            && (Model.DataInicioAvaliacaoGestor <= DateTime.Today && Model.DataTerminoAvaliacaoGestor >= DateTime.Today))
                        {
                            @Html.DropDownListFor(model => Model.ItemRecomendacaoColaborador.RecomendacaoDeRating,
                                               new SelectList(Model.ListaRecomendacaoDeRating,
                                                         "Value",
                                                         "Text",
                                                  Model.ItemRecomendacaoColaborador.RecomendacaoDeRating),
                                                         " ",
                                                         new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => Model.ItemRecomendacaoColaborador.RecomendacaoDeRating, string.Empty, new { @class = "text-danger" })
                        }
                        else 
                        { 
                            @Html.DropDownListFor(model => Model.ItemRecomendacaoColaborador.RecomendacaoDeRating,
                                               new SelectList(Model.ListaRecomendacaoDeRating,
                                                         "Value",
                                                         "Text",
                                                  Model.ItemRecomendacaoColaborador.RecomendacaoDeRating),
                                                         " ",
                                                new { @class = "form-control", @readonly = "readonly" })
                        }
                    }
                    else
                    {
                        @Html.DropDownListFor(model => Model.ItemRecomendacaoColaborador.RecomendacaoDeRating,
                                               new SelectList(Model.ListaRecomendacaoDeRating,
                                                         "Value",
                                                         "Text",
                                                  Model.ItemRecomendacaoColaborador.RecomendacaoDeRating),
                                                         " ",
                                                              new { @class = "form-control", @readonly = "readonly" })
                    }
                }

            </div>
            <div class="col-md-025">
                <label>Recomendação de Promoção</label>
            </div>
            <div class="col-md-025">
                @if (Model.StatusAvaliacaoColaboradorID == (int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosRH
                    || Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.Encerrada))
                {
                    @Html.DropDownListFor(model => Model.ItemRecomendacaoColaborador.RecomendacaoDePromocao,
                                               new SelectList(Model.ListaSimNao,
                                                         "Value",
                                                         "Text",
                                                  Model.ItemRecomendacaoColaborador.RecomendacaoDePromocao),
                                                         " ",
                                                              new { @class = "form-control", @readonly = "readonly" })
                }
                else
                {
                    if (Model.StatusAvaliacaoColaboradorID == (int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores)
                    {
                        if (Model.StatusCicloAvaliacaoID == (int)Enumeradores.SituacaoCicloAvaliacao.EmAvaliacaoPelosGestores
                            && (Model.DataInicioAvaliacaoGestor <= DateTime.Today && Model.DataTerminoAvaliacaoGestor >= DateTime.Today))
                        {
                            @Html.DropDownListFor(model => Model.ItemRecomendacaoColaborador.RecomendacaoDePromocao,
                                               new SelectList(Model.ListaSimNao,
                                                         "Value",
                                                         "Text",
                                                  Model.ItemRecomendacaoColaborador.RecomendacaoDePromocao),
                                                         " ",
                                                         new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => Model.ItemRecomendacaoColaborador.RecomendacaoDePromocao, string.Empty, new { @class = "text-danger" })
                        }
                        else
                        {
                            @Html.DropDownListFor(model => Model.ItemRecomendacaoColaborador.RecomendacaoDePromocao,
                                               new SelectList(Model.ListaSimNao,
                                                         "Value",
                                                         "Text",
                                                  Model.ItemRecomendacaoColaborador.RecomendacaoDePromocao),
                                                         " ",
                                                              new { @class = "form-control", @readonly = "readonly" })
                        }
                    }
                    else
                    {
                        @Html.DropDownListFor(model => Model.ItemRecomendacaoColaborador.RecomendacaoDePromocao,
                                               new SelectList(Model.ListaSimNao,
                                                         "Value",
                                                         "Text",
                                                  Model.ItemRecomendacaoColaborador.RecomendacaoDePromocao),
                                                         " ",
                                                              new { @class = "form-control", @readonly = "readonly" })
                    }
                }
            </div>
        </div>
    </div>

    <div class="row top20">
        <div class="col-md-050">
            <label>Justificativa</label>
        </div>
        <div class="col-md-050">
            <label>Justificativa</label>
        </div>
    </div>
    <div class="row top20">
        <div class="col-md-050">
            @if (Model.StatusAvaliacaoColaboradorID == (int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores)
            {
                if (Model.StatusCicloAvaliacaoID == (int)Enumeradores.SituacaoCicloAvaliacao.EmAvaliacaoPelosGestores
                    && (Model.DataInicioAvaliacaoGestor <= DateTime.Today && Model.DataTerminoAvaliacaoGestor >= DateTime.Today))
                {
                    @Html.TextAreaFor(model => Model.ItemRecomendacaoColaborador.Justificativa, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => Model.ItemRecomendacaoColaborador.Justificativa, string.Empty, new { @class = "text-danger" })
                }
                else
                {
                    @Html.TextAreaFor(model => Model.ItemRecomendacaoColaborador.Justificativa, new { @class = "form-control", @readonly = "readonly" })
                }
            }
            else
            {
                @Html.TextAreaFor(model => Model.ItemRecomendacaoColaborador.Justificativa, new { @class = "form-control", @readonly = "readonly" })
            }
        </div>

        <div class="col-md-050">
            @if (Model.StatusAvaliacaoColaboradorID == (int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores)
            {
                if (Model.StatusCicloAvaliacaoID == (int)Enumeradores.SituacaoCicloAvaliacao.EmAvaliacaoPelosGestores
                    && (Model.DataInicioAvaliacaoGestor <= DateTime.Today && Model.DataTerminoAvaliacaoGestor >= DateTime.Today))
                {
                    @Html.TextAreaFor(model => Model.ItemRecomendacaoColaborador.JustificativaDaJustificativa, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => Model.ItemRecomendacaoColaborador.JustificativaDaJustificativa, string.Empty, new { @class = "text-danger" })
                }
                else
                {
                    @Html.TextAreaFor(model => Model.ItemRecomendacaoColaborador.JustificativaDaJustificativa, new { @class = "form-control", @readonly = "readonly" })
                }
            }
            else
            {
                @Html.TextAreaFor(model => Model.ItemRecomendacaoColaborador.JustificativaDaJustificativa, new { @class = "form-control", @readonly = "readonly" })
            }
        </div>
    </div>
    <hr />
    <div class="row top20">
        <div class="col-md-095 col-md-offset-005 text-right">
            @Html.ActionLink("Anterior", "ManterAvaliacaoColaboradorPerformance", new { id = Model.CicloAvaliacaoSelecionadoID, colaboradorID = Model.ColaboradorID, etapaAutoAvaliacao = 1 }, new { @class = "btn btn-default" })
            @if (Model.StatusAvaliacaoColaboradorID == (int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores)
            {
                if (Model.StatusCicloAvaliacaoID == (int)Enumeradores.SituacaoCicloAvaliacao.EmAvaliacaoPelosGestores
                    && (Model.DataInicioAvaliacaoGestor <= DateTime.Today && Model.DataTerminoAvaliacaoGestor >= DateTime.Today))
                {
                    <input type="submit" value="Salvar" class="btn btn-default" />
                    if (Model.ItemRecomendacaoColaborador.Justificativa != null
                       && Model.ItemRecomendacaoColaborador.Justificativa != ""
                       && Model.ItemRecomendacaoColaborador.JustificativaDaJustificativa != null
                       && Model.ItemRecomendacaoColaborador.JustificativaDaJustificativa != ""
                       && Model.ItemRecomendacaoColaborador.RecomendacaoDeRating != 0)
                    {
                    
                        @Html.ActionLink("Submeter ao RH", "SubmeterAvaliacaoColaboradorAvaliacaoRH", new { cicloAvaliacaoSelecionadoID = Model.CicloAvaliacaoSelecionadoID, avaliacaoColaboradorID = Model.AvaliacaoColaboradorID }, new { @class = "btn btn-default" })
                    }
                }
            }
        </div>
    </div>
}