@using AvaliacaoDesempenho.Dominio.BusinessEntities;

@model AvaliacaoDesempenho.Models.Avaliacoes.ManterAvaliacaoColaboradorAutoAvaliacaoViewModel

@{
    Layout = "~/Views/Shared/_LayoutInterno.cshtml";

}

@Html.Action("CabecalhoColaborador", "Usuarios", new { cicloAvaliacaoSelecionadoID = Model.CicloAvaliacaoSelecionadoID, colaboradorID = Model.ColaboradorID })

<label>Auto-avaliação</label>
<hr />

@using (Html.BeginForm("ManterAvaliacaoColaboradorAutoAvaliacao",
                              "Avaliacoes",
                              FormMethod.Post,
                              new { @class = "form-horizontal", role = "form" }))
        
{
    @Html.HiddenFor(model => model.CicloAvaliacaoSelecionadoID)
    @Html.HiddenFor(model => model.AvaliacaoColaboradorID)
    @Html.HiddenFor(model => model.ColaboradorID)
    @Html.HiddenFor(model => model.StatusAvaliacaoColaboradorID)
    @Html.HiddenFor(model => model.GestorRubiID)
    @Html.HiddenFor(model => model.UsuarioRubiID)
    @Html.HiddenFor(model => model.SituacaoCicloAvaliaoID)
    @Html.HiddenFor(model => model.DataInicioAutoAvaliacao)
    @Html.HiddenFor(model => model.DataTerminoAutoAvaliacao)
    @Html.HiddenFor(model => model.IncluirMeta)
    @Html.HiddenFor(model => model.IncluirContribuicao)

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })

    if (Model.ListaObjetivosMetasResultadosatingidosViewModel != null
            && Model.ListaObjetivosMetasResultadosatingidosViewModel.Any())
    {
        if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.AutoAvaliacao)
             && !Model.AcessoGestor)
        {
            <div class="col-md-030">
                <label>Objetivos</label>
            </div>
            <div class="col-md-030">
                <label>Metas</label>
            </div>
            <div class="col-md-040">
                <label>Resultados Atingidos</label>
            </div>
   

            for (int i = 0; i < Model.ListaObjetivosMetasResultadosatingidosViewModel.Count; i++)
            {
                //if(Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido == null ||
                //   Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido == "")
                //{
                //    Model.ProximaEtapa = false;
                //}
                @Html.HiddenFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].ID)

                if (Model.ListaObjetivosMetasResultadosatingidosViewModel[i].AutoAvaliacao)
                {
                    <div class="row top30">
                        <div class="col-md-030">
                            @Html.HiddenFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].AutoAvaliacao)
                            @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].Objetivo, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].Objetivo, string.Empty, new { @class = "text-danger" })
                        </div>
                        <div class="col-md-030">
                            @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorMeta, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorMeta, string.Empty, new { @class = "text-danger" })
                        </div>
                        <div class="col-md-040">
                            @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido, string.Empty, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row top20">
                        <div class="col-md-095 col-md-offset-005 text-right">
                            @Html.ActionLink("Excluir", "DeletarAvaliacaoColaboradorAutoAvaliacao", new { objetivoSelecionadoID = Model.ListaObjetivosMetasResultadosatingidosViewModel[i].ID, cicloAvaliacaoSelecionadoID = Model.CicloAvaliacaoSelecionadoID }, new { @class = "btn btn-default" })
                        </div>
                    </div>
                }
                else
                {
                    <div class="row top30">
                        <div class="col-md-030">
                            @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].Objetivo, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="col-md-030">
                            @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorMeta, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        @if (Model.DataInicioAutoAvaliacao <= DateTime.Today && Model.DataTerminoAutoAvaliacao >= DateTime.Today)
                        {
                            <div class="col-md-040">
                                @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido, string.Empty, new { @class = "text-danger" })
                            </div>
                        }
                        else
                        {
                            <div class="col-md-040">
                                @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        }
                    </div>
                }
                <hr />
            }

            if (Model.IncluirMeta)
            {
                <div class="row top30">
                    <div class="col-md-030">
                        @Html.TextAreaFor(model => model.ObjetivoMetaResultadoAtingidoCadastro.Objetivo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ObjetivoMetaResultadoAtingidoCadastro.Objetivo, string.Empty, new { @class = "text-danger" })
                    </div>
                    <div class="col-md-030">
                        @Html.TextAreaFor(model => model.ObjetivoMetaResultadoAtingidoCadastro.MetaColaboradorMeta, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ObjetivoMetaResultadoAtingidoCadastro.MetaColaboradorMeta, string.Empty, new { @class = "text-danger" })
                    </div>
                    <div class="col-md-040">
                        @Html.TextAreaFor(model => model.ObjetivoMetaResultadoAtingidoCadastro.MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ObjetivoMetaResultadoAtingidoCadastro.MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido, string.Empty, new { @class = "text-danger" })
                    </div>
                </div>

                <hr />
            }

            <div class="row top20">
                <div class="col-md-095 col-md-offset-005 text-right">
                    @if (!Model.IncluirMeta)
                    {
                        if (Model.DataInicioAutoAvaliacao <= DateTime.Today && Model.DataTerminoAutoAvaliacao >= DateTime.Today)
                        {
                            <input type="submit" value="Incluir nova meta" formaction="/Avaliacoes/IncluirMetaAvaliacaoColaboradorAutoAvaliacao" class="btn btn-default" />
                        }
                    }
                    else
                    {
                        @Html.ActionLink("Cancelar", "ManterAvaliacaoColaboradorAutoAvaliacao", new { id = Model.CicloAvaliacaoSelecionadoID }, new { @class = "btn btn-default" })
                    }

                    @if (Model.DataInicioAutoAvaliacao <= DateTime.Today && Model.DataTerminoAutoAvaliacao >= DateTime.Today)
                    {
                        <input type="submit" value="Salvar" class="btn btn-default" />
                    }
                </div>
            </div>
        }
        else if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores) || Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosRH))
        {
            <div class="row">
                <div class="col-md-030">
                    <label>Objetivos</label>
                </div>
                <div class="col-md-030">
                    <label>Metas</label>
                </div>
                <div class="col-md-040">
                    <label>Resultados Atingidos</label>
                </div>
            </div>

            for (int i = 0; i < Model.ListaObjetivosMetasResultadosatingidosViewModel.Count; i++)
            {
                //if (Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido == null ||
                //   Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido == "")
                //{
                //    Model.ProximaEtapa = false;
                //}
                @Html.HiddenFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].ID)

                <div class="row top30">
                    <div class="col-md-030">
                        @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].Objetivo, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-030">
                        @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorMeta, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-040">
                        @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
                <hr />
            }
        }
    }

    if (Model.ListaOutrasContribuicoesViewModel != null
            && Model.ListaOutrasContribuicoesViewModel.Any())
    {
        <hr />
        <div class="row">
            <div class="col-md-100">
                <label>Outras Contribuições</label>
            </div>
        </div>

        for (int i = 0; i < Model.ListaOutrasContribuicoesViewModel.Count; i++)
        {
            @Html.HiddenFor(model => Model.ListaOutrasContribuicoesViewModel[i].ID)

            <div class="row top30">
                <div class="col-md-100">
                    @if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.AutoAvaliacao))
                    {
                        if (Model.DataInicioAutoAvaliacao <= DateTime.Today && Model.DataTerminoAutoAvaliacao >= DateTime.Today)
                        {
                            @Html.TextAreaFor(model => Model.ListaOutrasContribuicoesViewModel[i].Contribuicao, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => Model.ListaOutrasContribuicoesViewModel[i].Contribuicao, string.Empty, new { @class = "text-danger" })
                        }
                        else
                        {
                            @Html.TextAreaFor(model => Model.ListaOutrasContribuicoesViewModel[i].Contribuicao, new { @class = "form-control", @readonly = "readonly" })
                        }
                    }
                    else
                    {
                        @Html.TextAreaFor(model => Model.ListaOutrasContribuicoesViewModel[i].Contribuicao, new { @class = "form-control", @readonly = "readonly" })
                    }
                </div>
            </div>
            if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.AutoAvaliacao))
            {
                if (Model.DataInicioAutoAvaliacao <= DateTime.Today && Model.DataTerminoAutoAvaliacao >= DateTime.Today)
                {
                    <div class="row top20">
                        <div class="col-md-095 col-md-offset-005 text-right">
                            @Html.ActionLink("Excluir", "DeletarAvaliacaoColaboradorOutrasContribuicoes", new { cicloAvaliacaoSelecionadoID = Model.CicloAvaliacaoSelecionadoID, contribuicaoSelecionadaID = Model.ListaOutrasContribuicoesViewModel[i].ID }, new { @class = "btn btn-default" })
                        </div>
                    </div>
                }
            }
        }

        if (Model.IncluirContribuicao)
        {
            <div class="row top30">
                <div class="col-md-100">
                    @Html.TextAreaFor(model => model.OutrasContribuicoesCadastro.Contribuicao, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OutrasContribuicoesCadastro.Contribuicao, string.Empty, new { @class = "text-danger" })
                </div>
            </div>
            <div class="row top20">
                <div class="col-md-095 col-md-offset-005 text-right">
                    @Html.ActionLink("Cancelar", "ManterAvaliacaoColaboradorAutoAvaliacao", new { id = Model.CicloAvaliacaoSelecionadoID }, new { @class = "btn btn-default" })
                    @if (Model.DataInicioAutoAvaliacao <= DateTime.Today && Model.DataTerminoAutoAvaliacao >= DateTime.Today)
                    {
                        <input type="submit" value="Salvar" class="btn btn-default" />
                    }
                </div>
            </div>
        }
        else
        {
            if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.AutoAvaliacao))
            {
                if (Model.DataInicioAutoAvaliacao <= DateTime.Today && Model.DataTerminoAutoAvaliacao >= DateTime.Today)
                {
                    <div class="row top20">
                        <div class="col-md-095 col-md-offset-005 text-right">
                            @Html.ActionLink("Incluir outra contribuição", "ManterAvaliacaoColaboradorAutoAvaliacao", new { id = Model.CicloAvaliacaoSelecionadoID, incluirContribuicao = true }, new { @class = "btn btn-default" })
                        </div>
                    </div>
                }
            }
        }

        if (!Model.IncluirContribuicao && !Model.IncluirMeta && Model.ProximaEtapa)
        {
            <hr />
            <div class="row top20">
                <div class="col-md-095 col-md-offset-005 text-right">
                    @if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.AutoAvaliacao) &&
                         Model.SituacaoCicloAvaliaoID.Equals((int)Enumeradores.SituacaoCicloAvaliacao.AutoAvaliacao) &&
                        (Model.DataInicioAutoAvaliacao <= DateTime.Today && Model.DataTerminoAutoAvaliacao >= DateTime.Today))
                    {
                        <input type="submit" value="Próxima Etapa" formaction="/Avaliacoes/ProximaEtapaManterAvaliacaoColaboradorAutoAvaliacao" class="btn btn-default" />
                    }
                    else
                    {
                        @Html.ActionLink("Próxima Etapa", "ManterAvaliacaoColaboradorCompetencias", new { id = Model.CicloAvaliacaoSelecionadoID, colaboradorID = Model.ColaboradorID }, new { @class = "btn btn-default" })
                    }
                </div>
            </div>
        }
    }
    else
    {
        <hr class="top30" />
        <div class="row">
            <div class="col-md-100">
                <label>Outras Contribuições</label>
            </div>
        </div>

        if (!Model.AcessoGestor)
        {
            if (!Model.IncluirContribuicao)
            {
                if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.AutoAvaliacao))
                {
                    if (Model.DataInicioAutoAvaliacao <= DateTime.Today && Model.DataTerminoAutoAvaliacao >= DateTime.Today)
                    {
                        <div class="row top20">
                            <div class="col-md-095 col-md-offset-005 text-right">
                                @Html.ActionLink("Incluir", "ManterAvaliacaoColaboradorAutoAvaliacao", new { id = Model.CicloAvaliacaoSelecionadoID, incluirContribuicao = true }, new { @class = "btn btn-default" })
                            </div>
                        </div>
                    }
                }
            }
            else
            {
                <div class="row top30">
                    <div class="col-md-100">
                        @if (Model.DataInicioAutoAvaliacao <= DateTime.Today && Model.DataTerminoAutoAvaliacao >= DateTime.Today)
                        {
                            @Html.TextAreaFor(model => model.OutrasContribuicoesCadastro.Contribuicao, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.OutrasContribuicoesCadastro.Contribuicao, string.Empty, new { @class = "text-danger" })
                        }
                        else
                        {
                            @Html.TextAreaFor(model => model.OutrasContribuicoesCadastro.Contribuicao, new { @class = "form-control", @readonly = "readonly" })
                        }
                    </div>
                </div>
                <div class="row top20">
                    <div class="col-md-095 col-md-offset-005 text-right">
                        @Html.ActionLink("Cancelar", "ManterAvaliacaoColaboradorAutoAvaliacao", new { id = Model.CicloAvaliacaoSelecionadoID }, new { @class = "btn btn-default" })
                        @if (Model.DataInicioAutoAvaliacao <= DateTime.Today && Model.DataTerminoAutoAvaliacao >= DateTime.Today)
                        {
                            <input type="submit" value="Salvar" class="btn btn-default" />
                        }
                    </div>
                </div>
            }
        }

        if (!Model.AcessoGestor
            && !Model.IncluirMeta
            && !Model.IncluirContribuicao
            && Model.ProximaEtapa)
        {
            <div class="row top20">
                <div class="col-md-095 col-md-offset-005 text-right">
                    @if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.AutoAvaliacao) &&
                         Model.SituacaoCicloAvaliaoID.Equals((int)Enumeradores.SituacaoCicloAvaliacao.AutoAvaliacao) &&
                        (Model.DataInicioAutoAvaliacao <= DateTime.Today && Model.DataTerminoAutoAvaliacao >= DateTime.Today))
                    {
                        <input type="submit" value="Próxima Etapa" formaction="/Avaliacoes/ProximaEtapaManterAvaliacaoColaboradorAutoAvaliacao" class="btn btn-default" />
                    }
                    else
                    {
                        @Html.ActionLink("Próxima Etapa", "ManterAvaliacaoColaboradorCompetencias", new { id = Model.CicloAvaliacaoSelecionadoID, colaboradorID = Model.ColaboradorID }, new { @class = "btn btn-default" })
                    }
                </div>
            </div>
        }
    }
}