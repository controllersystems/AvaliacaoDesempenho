@using AvaliacaoDesempenho.Dominio.BusinessEntities;

@model AvaliacaoDesempenho.Models.Avaliacoes.ManterAvaliacaoColaboradorAutoAvaliacaoViewModel

@{
    Layout = "~/Views/Shared/_LayoutInterno.cshtml";

}

@Html.Action("CabecalhoColaborador", "Usuarios", new { cicloAvaliacaoSelecionadoID = Model.CicloAvaliacaoSelecionadoID })

<label>Auto-avaliação</label>
<hr />

@if (Model.ListaObjetivosMetasResultadosatingidosViewModel != null
        && Model.ListaObjetivosMetasResultadosatingidosViewModel.Any())
{


    if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.AutoAvaliacao)
         && !Model.AcessoGestor)
    {
        <div class="row">
            @if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores) && Model.AcessoGestor)
            {
                <div class="col-md-025">
                    <label>Objetivos</label>
                </div>
                <div class="col-md-025">
                    <label>Metas</label>
                </div>
                <div class="col-md-025">
                    <label>Resultados Atingidos</label>
                </div>
                <div class="col-md-025">
                    <label>Avaliação Gestor</label>
                </div>
            }
            else
            {
                <div class="col-md-030">
                    <label>Objetivos</label>
                </div>
                <div class="col-md-030">
                    <label>Metas</label>
                </div>
                <div class="col-md-040">
                    <label>Resultados Atingidos</label>
                </div>
            }
        </div>
    
        using (Html.BeginForm("ManterAvaliacaoColaboradorAutoAvaliacao",
                              "Avaliacoes",
                              FormMethod.Post,
                              new { @class = "form-horizontal", role = "form" }))
        {
            @Html.HiddenFor(model => model.CicloAvaliacaoSelecionadoID)
            @Html.HiddenFor(model => model.AvaliacaoColaboradorID)
            @Html.HiddenFor(model => model.ColaboradorID)

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })

            for (int i = 0; i < Model.ListaObjetivosMetasResultadosatingidosViewModel.Count; i++)
            {
                @Html.HiddenFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].ID)

                if (Model.ListaObjetivosMetasResultadosatingidosViewModel[i].AutoAvaliacao)
                {
                    <div class="row top30">
                        <div class="col-md-030">
                            @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].Objetivo, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].Objetivo, string.Empty, new { @class = "text-danger" })
                        </div>
                        <div class="col-md-030">
                            @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorMeta, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorMeta, string.Empty, new { @class = "text-danger" })
                        </div>
                        <div class="col-md-040">
                            @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido, string.Empty, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row top20">
                        <div class="col-md-095 col-md-offset-005 text-right">
                            @Html.ActionLink("Excluir", "DeletarAvaliacaoColaboradorAutoAvaliacao", new { objetivoSelecionadoID = Model.ListaObjetivosMetasResultadosatingidosViewModel[i].ID, cicloAvaliacaoSelecionadoID = Model.CicloAvaliacaoSelecionadoID }, new { @class = "btn btn-default" })
                        </div>
                    </div>
                }
                else
                {
                    <div class="row top30">
                        <div class="col-md-030">
                            @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].Objetivo, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="col-md-030">
                            @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorMeta, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="col-md-040">
                            @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido, new { @class = "form-control" })
                        </div>
                    </div>
                }
                <hr />
            }

            if (Model.IncluirMeta)
            {
                <div class="row top30">
                    <div class="col-md-030">
                        @Html.TextAreaFor(model => model.ObjetivoMetaResultadoAtingidoCadastro.Objetivo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ObjetivoMetaResultadoAtingidoCadastro.Objetivo, string.Empty, new { @class = "text-danger" })
                    </div>
                    <div class="col-md-030">
                        @Html.TextAreaFor(model => model.ObjetivoMetaResultadoAtingidoCadastro.MetaColaboradorMeta, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ObjetivoMetaResultadoAtingidoCadastro.MetaColaboradorMeta, string.Empty, new { @class = "text-danger" })
                    </div>
                    <div class="col-md-040">
                        @Html.TextAreaFor(model => model.ObjetivoMetaResultadoAtingidoCadastro.MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ObjetivoMetaResultadoAtingidoCadastro.MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido, string.Empty, new { @class = "text-danger" })
                    </div>
                </div>

                <hr />
            }

            <div class="row top20">
                <div class="col-md-095 col-md-offset-005 text-right">
                    @if (!Model.IncluirMeta)
                    {
                        @Html.ActionLink("Incluir nova meta", "ManterAvaliacaoColaboradorAutoAvaliacao", new { id = Model.CicloAvaliacaoSelecionadoID, incluirMeta = true }, new { @class = "btn btn-default" })
                    }
                    else
                    {
                        @Html.ActionLink("Cancelar", "ManterAvaliacaoColaboradorAutoAvaliacao", new { id = Model.CicloAvaliacaoSelecionadoID }, new { @class = "btn btn-default" })
                    }

                    <input type="submit" value="Salvar" class="btn btn-default" />
                </div>
            </div>
        }
    }
    else if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores) )
    {
   
    //}

        @*if (Model.IncluirMeta)
        {
            <div class="row top30">
                <div class="col-md-030">
                    @Html.TextAreaFor(model => model.ObjetivoMetaResultadoAtingidoCadastro.Objetivo, new { @class = "form-control", @readonly = "readonly" })
                </div>
                <div class="col-md-030">
                    @Html.TextAreaFor(model => model.ObjetivoMetaResultadoAtingidoCadastro.MetaColaboradorMeta, new { @class = "form-control", @readonly = "readonly" })
                </div>
                <div class="col-md-040">
                    @Html.TextAreaFor(model => model.ObjetivoMetaResultadoAtingidoCadastro.MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido, new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>

            <hr />
        }*@
    }
}

@if (Model.ListaOutrasContribuicoesViewModel != null
            && Model.ListaOutrasContribuicoesViewModel.Any())
{
    if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores) && !Model.AcessoGestor)
    {
        <hr />
        <div class="row">
            <div class="col-md-050">
                <label>Outras Contribuições</label>
            </div>
        </div>


        for (int i = 0; i < Model.ListaOutrasContribuicoesViewModel.Count; i++)
        {
                @Html.HiddenFor(model => Model.ListaOutrasContribuicoesViewModel[i].ID)

                <div class="row top30">
                    <div class="col-md-100">
                        @Html.TextAreaFor(model => Model.ListaOutrasContribuicoesViewModel[i].Contribuicao, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>
            }
            <hr />
        }
        else
        {

            using (Html.BeginForm("ManterAvaliacaoGestor",
                                  "Avaliacoes",
                                  FormMethod.Post,
                                  new { @class = "form-horizontal", role = "form" }))
            {
            @Html.HiddenFor(model => model.CicloAvaliacaoSelecionadoID)
            @Html.HiddenFor(model => model.AvaliacaoColaboradorID)
            @Html.HiddenFor(model => model.ColaboradorID)

            <div class="row">
                @if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores) && Model.AcessoGestor)
                {
                    <div class="col-md-025">
                        <label>Objetivos</label>
                    </div>
                    <div class="col-md-025">
                        <label>Metas</label>
                    </div>
                    <div class="col-md-025">
                        <label>Resultados Atingidos</label>
                    </div>
                    <div class="col-md-025">
                        <label>Avaliação Gestor</label>
                    </div>
                }
                else
                {
                    <div class="col-md-030">
                        <label>Objetivos</label>
                    </div>
                    <div class="col-md-030">
                        <label>Metas</label>
                    </div>
                    <div class="col-md-040">
                        <label>Resultados Atingidos</label>
                    </div>
                }
            </div>

                for (int i = 0; i < Model.ListaObjetivosMetasResultadosatingidosViewModel.Count; i++)
                {
                @Html.HiddenFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].ID)

                <div class="row top30">
                    <div class="col-md-025">
                        @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].Objetivo, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-025">
                        @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorMeta, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="col-md-025">
                        @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].MetaColaboradorResultadoAtingidoColaboradorResultadoAtingido, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    @if (Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores) && Model.AcessoGestor)
                    {
                        <div class="col-md-030">
                            @Html.TextAreaFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].AvaliacaoGestor, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => Model.ListaObjetivosMetasResultadosatingidosViewModel[i].AvaliacaoGestor, string.Empty, new { @class = "text-danger" })


                        </div>
                    }
                </div>
                <hr />
             }

            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })

            <hr />
            <div class="row">
                <div class="col-md-050">
                    <label>Outras Contribuições</label>
                </div>
            </div>



                for (int i = 0; i < Model.ListaOutrasContribuicoesViewModel.Count; i++)
                {
                @Html.HiddenFor(model => Model.ListaOutrasContribuicoesViewModel[i].ID)

                <div class="row top30">
                    <div class="col-md-050">
                        @Html.TextAreaFor(model => Model.ListaOutrasContribuicoesViewModel[i].Contribuicao, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                    @if (Model.IncluirContribuicao)
                    {
                        <div class="col-md-050">
                            @if (Model.ListaAvaliacaoGestorOutrasContribuicoes.Count > 0)
                            {
                               @Html.TextAreaFor(model => Model.ListaOutrasContribuicoesViewModel[i].AvaliacaoGestor, new { @class = "form-control" })
                               @Html.ValidationMessageFor(model => Model.ListaOutrasContribuicoesViewModel[i].AvaliacaoGestor, string.Empty, new { @class = "text-danger" })
                            }
                        </div>
                    }
                </div>
                @*<div class="row top20">
                    <div class="col-md-095 col-md-offset-005 text-right">
                        @Html.ActionLink("Excluir", "DeletarAvaliacaoColaboradorOutrasContribuicoes", new { contribuicaoSelecionadaID = Model.ListaOutrasContribuicoesViewModel[i].ID, cicloAvaliacaoSelecionadoID = Model.CicloAvaliacaoSelecionadoID }, new { @class = "btn btn-default" })
                    </div>
                </div>*@

                <hr />
            }

            @*if (Model.IncluirContribuicao)
            {
                <div class="row top30">
                    <div class="col-md-100">
                        @Html.TextAreaFor(model => model.OutrasContribuicoesCadastro.Contribuicao, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.OutrasContribuicoesCadastro.Contribuicao, string.Empty, new { @class = "text-danger" })
                    </div>
                </div>

                <hr />
            }*@

            <div class="row top20">
                <div class="col-md-095 col-md-offset-005 text-right">
                    @*@if (!Model.IncluirContribuicao)
                    {
                        @Html.ActionLink("Incluir", "ManterAvaliacaoColaboradorAutoAvaliacao", new { id = Model.CicloAvaliacaoSelecionadoID, incluirContribuicao = true }, new { @class = "btn btn-default" })
                    }
                    else
                    {
                        @Html.ActionLink("Cancelar", "ManterAvaliacaoColaboradorAutoAval", new { id = Model.CicloAvaliacaoSelecionadoID }, new { @class = "btn btn-default" })
                    }*@
                    <input type="submit" value="Salvar" class="btn btn-default" />
                    @Html.ActionLink("Próxima Etapa", "RotearManutencaoAvaliacaoColaborador", new { id = Model.CicloAvaliacaoSelecionadoID, colaboradorID = Model.AvaliacaoColaboradorID.Value, etapaAutoAvaliacao = 2 }, new { @class = "btn btn-default" })
                </div>
            </div>
        }
        }
    }
    else
    {
        <hr class="top30" />
        <div class="row">
            <div class="col-md-100">
                <label>Outras Contribuições</label>
            </div>
        </div>

        if (!Model.AcessoGestor)
        {
            if (!Model.IncluirContribuicao)
            {
                <div class="row top20">
                    <div class="col-md-095 col-md-offset-005 text-right">
                        @Html.ActionLink("Incluir", "ManterAvaliacaoColaboradorAutoAvaliacao", new { id = Model.CicloAvaliacaoSelecionadoID, incluirContribuicao = true }, new { @class = "btn btn-default" })
                    </div>
                </div>
            }
            else
            {
                using (Html.BeginForm("ManterAvaliacaoColaboradorAutoAvaliacao",
                                      "Avaliacoes",
                                      FormMethod.Post,
                                      new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })

                    @Html.HiddenFor(model => model.CicloAvaliacaoSelecionadoID)
                    @Html.HiddenFor(model => model.AvaliacaoColaboradorID)
                    @Html.HiddenFor(model => model.ColaboradorID)

                    <div class="row top30">
                        <div class="col-md-100">
                            @Html.TextAreaFor(model => model.OutrasContribuicoesCadastro.Contribuicao, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.OutrasContribuicoesCadastro.Contribuicao, string.Empty, new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row top20">
                        <div class="col-md-095 col-md-offset-005 text-right">
                            @Html.ActionLink("Cancelar", "ManterAvaliacaoColaboradorAutoAvaliacao", new { id = Model.CicloAvaliacaoSelecionadoID }, new { @class = "btn btn-default" })
                            <input type="submit" value="Salvar" class="btn btn-default" />
                        </div>
                    </div>
                }
            }
        }
    }

    @if (!Model.StatusAvaliacaoColaboradorID.Equals((int)Enumeradores.StatusAvaliacaoColaborador.EmAvaliacaoPelosGestores) && !Model.AcessoGestor)
    {
        <div class="row top20">
            <div class="col-md-095 col-md-offset-005 text-right">
                @Html.ActionLink("Próxima Etapa", "ManterAvaliacaoColaboradorCompetencias", new { id = Model.CicloAvaliacaoSelecionadoID }, new { @class = "btn btn-default" })
            </div>
        </div>
    }